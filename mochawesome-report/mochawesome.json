{
  "stats": {
    "suites": 5,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-05T22:45:52.292Z",
    "end": "2024-03-05T22:45:52.311Z",
    "duration": 19,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8de57f23-1b3a-4b08-bde9-91ef06ab92cd",
      "title": "",
      "fullFile": "/Users/elizabeth.perez/Documents/Projects/unit-testing/test/numbers-validator/isNumberEven.spec.js",
      "file": "/test/numbers-validator/isNumberEven.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4398842f-dd1f-4f32-b1c8-2a773048d757",
          "title": "NumbersValidator",
          "fullFile": "/Users/elizabeth.perez/Documents/Projects/unit-testing/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"NumbersValidator\"",
              "fullTitle": "NumbersValidator \"before each\" hook in \"NumbersValidator\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "0be3fcef-5371-4e44-ab87-a0fecbeb972a",
              "parentUUID": "4398842f-dd1f-4f32-b1c8-2a773048d757",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"NumbersValidator\"",
              "fullTitle": "NumbersValidator \"after each\" hook in \"NumbersValidator\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "3b01b804-2849-4df2-a6a4-322c4f4f1e5f",
              "parentUUID": "4398842f-dd1f-4f32-b1c8-2a773048d757",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3e201b3f-b4ac-49ae-bc20-97f2f4230c70",
              "title": "isNumberEven",
              "fullFile": "/Users/elizabeth.perez/Documents/Projects/unit-testing/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "1.should return true if number is even",
                  "fullTitle": "NumbersValidator isNumberEven 1.should return true if number is even",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = 8;\nexpect(validator.isNumberEven(input)).to.be.equal(true);",
                  "err": {},
                  "uuid": "f0f57d8e-4ce9-4400-8c8f-02c05412c159",
                  "parentUUID": "3e201b3f-b4ac-49ae-bc20-97f2f4230c70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2.should return false if number is odd",
                  "fullTitle": "NumbersValidator isNumberEven 2.should return false if number is odd",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = 9;\nexpect(validator.isNumberEven(input)).to.be.equal(false);",
                  "err": {},
                  "uuid": "5f9d62b8-4212-450f-9aa8-a0bb7004d6f6",
                  "parentUUID": "3e201b3f-b4ac-49ae-bc20-97f2f4230c70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3.should throw an error when provided a string",
                  "fullTitle": "NumbersValidator isNumberEven 3.should throw an error when provided a string",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw(`[4] is not of type \"Number\" it is of type \"string\"`);",
                  "err": {},
                  "uuid": "f598ad78-5816-47bb-8fe0-ff82035e80bf",
                  "parentUUID": "3e201b3f-b4ac-49ae-bc20-97f2f4230c70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0f57d8e-4ce9-4400-8c8f-02c05412c159",
                "5f9d62b8-4212-450f-9aa8-a0bb7004d6f6",
                "f598ad78-5816-47bb-8fe0-ff82035e80bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1330a4d3-24d6-4c6a-8555-19f0787eef18",
              "title": "getEvenNumbersFromArray",
              "fullFile": "/Users/elizabeth.perez/Documents/Projects/unit-testing/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "1.should return an array of even numbers",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray 1.should return an array of even numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = [1, 2, 3, 4, 5, 6];\nexpect(validator.getEvenNumbersFromArray(input)).to.deep.equal([2, 4, 6]);",
                  "err": {},
                  "uuid": "c9257ad4-1555-4e3b-9524-e432bd136e8b",
                  "parentUUID": "1330a4d3-24d6-4c6a-8555-19f0787eef18",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2.should return an empty array if there are no even numbers",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray 2.should return an empty array if there are no even numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = [1, 3, 5];\nexpect(validator.getEvenNumbersFromArray(input)).to.deep.equal([]);",
                  "err": {},
                  "uuid": "f0afc839-ce5f-4f16-a867-55f3243540e8",
                  "parentUUID": "1330a4d3-24d6-4c6a-8555-19f0787eef18",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3.should throw an error when provided a non-array",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray 3.should throw an error when provided a non-array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = 'test';\nexpect(() => {\n  validator.getEvenNumbersFromArray(input);\n}).to.throw(`[${input}] is not an array`);",
                  "err": {},
                  "uuid": "a317f110-2545-49a1-8960-aa72b259d41c",
                  "parentUUID": "1330a4d3-24d6-4c6a-8555-19f0787eef18",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4.should throw an error when provided an array with non-numbers",
                  "fullTitle": "NumbersValidator getEvenNumbersFromArray 4.should throw an error when provided an array with non-numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = [1, '2', 3, '4', {}];\nexpect(() => {\n  validator.getEvenNumbersFromArray(input);\n}).to.throw(`[${input}] is not an array of \"Numbers\"`);",
                  "err": {},
                  "uuid": "cc3a4556-2acf-4404-bfd2-f3b27fabd50e",
                  "parentUUID": "1330a4d3-24d6-4c6a-8555-19f0787eef18",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9257ad4-1555-4e3b-9524-e432bd136e8b",
                "f0afc839-ce5f-4f16-a867-55f3243540e8",
                "a317f110-2545-49a1-8960-aa72b259d41c",
                "cc3a4556-2acf-4404-bfd2-f3b27fabd50e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6a62d47b-6f9a-4e15-855a-4d7cfcf2442b",
              "title": "isAllNumbers",
              "fullFile": "/Users/elizabeth.perez/Documents/Projects/unit-testing/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "1.should return true if all elements are numbers",
                  "fullTitle": "NumbersValidator isAllNumbers 1.should return true if all elements are numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = [1, 2, 3, 4];\nexpect(validator.isAllNumbers(input)).to.be.equal(true);",
                  "err": {},
                  "uuid": "5efef564-f112-472c-8be3-03e18b02b90c",
                  "parentUUID": "6a62d47b-6f9a-4e15-855a-4d7cfcf2442b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2.should return false if any element is not a number",
                  "fullTitle": "NumbersValidator isAllNumbers 2.should return false if any element is not a number",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = [1, 2, '3', 4];\nexpect(validator.isAllNumbers(input)).to.be.equal(false);",
                  "err": {},
                  "uuid": "d8cab245-1453-4927-b1a3-f63dad603606",
                  "parentUUID": "6a62d47b-6f9a-4e15-855a-4d7cfcf2442b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3.should throw an error when provided a non-array",
                  "fullTitle": "NumbersValidator isAllNumbers 3.should throw an error when provided a non-array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = 'test';\nexpect(() => {\n  validator.isAllNumbers(input);\n}).to.throw(`[${input}] is not an array`);",
                  "err": {},
                  "uuid": "51be9159-5187-4a48-8913-b2fa97e32bd1",
                  "parentUUID": "6a62d47b-6f9a-4e15-855a-4d7cfcf2442b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5efef564-f112-472c-8be3-03e18b02b90c",
                "d8cab245-1453-4927-b1a3-f63dad603606",
                "51be9159-5187-4a48-8913-b2fa97e32bd1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ef0c70ff-7271-4815-859b-d43115febf28",
              "title": "isInteger",
              "fullFile": "/Users/elizabeth.perez/Documents/Projects/unit-testing/test/numbers-validator/isNumberEven.spec.js",
              "file": "/test/numbers-validator/isNumberEven.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "1.should return true when passed an integer",
                  "fullTitle": "NumbersValidator isInteger 1.should return true when passed an integer",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = 8;\nexpect(validator.isInteger(input)).to.be.equal(true);",
                  "err": {},
                  "uuid": "fe514bdc-f7f4-436c-a7bf-e1c7811c70cf",
                  "parentUUID": "ef0c70ff-7271-4815-859b-d43115febf28",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2.should return false when passed a non-integer",
                  "fullTitle": "NumbersValidator isInteger 2.should return false when passed a non-integer",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = 8.5;\nexpect(validator.isInteger(input)).to.be.equal(false);",
                  "err": {},
                  "uuid": "df8042de-c714-454c-a609-0baba2449158",
                  "parentUUID": "ef0c70ff-7271-4815-859b-d43115febf28",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3.should throw an error when passed a non-number",
                  "fullTitle": "NumbersValidator isInteger 3.should throw an error when passed a non-number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const input = 'test';\nexpect(() => {\n  validator.isInteger(input);\n}).to.throw(`[${input}] is not a number`);",
                  "err": {},
                  "uuid": "f6d3abd0-80af-4e4e-846c-edb351ce09eb",
                  "parentUUID": "ef0c70ff-7271-4815-859b-d43115febf28",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe514bdc-f7f4-436c-a7bf-e1c7811c70cf",
                "df8042de-c714-454c-a609-0baba2449158",
                "f6d3abd0-80af-4e4e-846c-edb351ce09eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}